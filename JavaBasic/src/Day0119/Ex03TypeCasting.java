package Day0119;
// 형변환(type casting)
// 형변환이란 특정 값을 다른 데이터타입으로 변화시키는 것을
// 형변환이라고 한다.

// 형변환에는 암시적 형변환과 명시적 형변환 2가지 형변환이 있다.
// 암시적 형변환(implicit type casting)
// 암시적 형변환은 더 작은 데이터타입의 값을 더 큰 데이터타입으로 바꿀 때
// 발생된다. 우리가 특별히 어떠한 명령어를 적어주지 않아도
// 자동으로 자바가 변환시켜준다.
// -> 큰물통에 작은물통으로 물을 옮겨 담으면 문제 X -> 이게 암시적 형변환
// -> 이때 반대로 하면 큰물통의 물이 적어서 괜찮다고 명시적으로 밝혀줘야 하는것 -> 명시적 형변환

// 명시적 형변환(explicit type casting)
// 명시적 형변환은 더 큰 데이터타입의 값을 더 작은 데이어타입으로 바꿀 때
// 발생된다. 우리가 데이터 손실이 발생되더라도 값의 데이터타입을 바꾸라고
// 명시해주어야 한다.
// 명시적 형변환은
// 공간 = (바꿀 타입)값;
// 으로 해줄 수 있다.


public class Ex03TypeCasting {
    public static void main(String[] args) {
        // 암시적 형변환
        // 더 작은 데이터타입의 값을 더 큰 데이터타입에 옮겨 담겨나
        // 정수 값을 실수로 바꿀 때 발생
        byte b = 3;
        int number = b; 
        System.out.println("number의 현재값: "+number);
        
        double d = number;
        // 요래해도 데이터 손실 안일어난다. 그냥 .0 붙이면 되니께.
        System.out.println("d의 현재값: "+d);
        
        // 명시적 형변환
        // 더 큰 데이터타입의 값을 더 작은 데이터타입에 옮겨 담거나
        // 실수 값을 정수로 바꿀 때 발생
        // -> 데이터 손실 가능성(오버플로우. 3.5에서 0.5 날아감..etc) 방지
        number = 10;
        b = (byte)number;
        System.out.println("b의 현재값: "+b);
        
        // b = 3.14; ->.14를 그냥은 못 바꿔줌. b는 정수니께. 실수 3.14를 정수형으로 바꿔주자아.
        b = (byte)3.14;
        System.out.println("b의 현재값: "+b);
        
        // 원래라면 오버플로우 언더플로우는 우리가 일반적인 방법으로는
        // 발생시킬 수 없지만
        // 형변환을 사용하면 우리가 오버플로우/언더플로우를 발생시킬 수 있다.
        
        // 1. 오버플로우
        //    byte에 141 을 넣으면?
        // b = 141; -> 에러 뜬다. byte 수용 범위를 넘으니께.
        // 암시적 형변환을 내 맘대로 할수 없다.
        // 그렇다면 강제로 넣어주자!
        b = (byte)141;
        System.out.println("b의 현재값: "+b);
        // 141 = 128 + 13
        // byte기준으로 128은 오버플로우가 발생해서 -128이 된다.
        // 따라서
        // 141 = -128 +13 이 된다.
        // 따라서 결과는 -115 이다.
        
        // 2. 언더플로우
        //    byte에 -130 을 넣으면?
        // b = -130; -> byte 범위를 넘어서 에러 뜬다.
        // 그렇다면 강제로 넣어주자!
        // b = (byte)-130; 이렇게!
        // -130 = -129 - 1
        //      = 127 - 1
        //      = 126
        b = (byte)-130;
        System.out.println("b의 현재값: "+b);
        
    }
}









